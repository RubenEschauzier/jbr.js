/// <reference types="node" />
import type { Writable } from 'stream';
import type * as RDF from '@rdfjs/types';
import type { IEnhancementContext } from './IEnhancementContext';
import type { IEnhancementHandler } from './IEnhancementHandler';
/**
 * Generates vocabulary information about the domain of a specific predicate
 */
export declare class EnhancementHandlerVocabularyPredicateDomain implements IEnhancementHandler {
    private readonly classIRI;
    private readonly predicateIRI;
    /**
     * @param classIRI class that is domain for the given predicate
     * @param predicateIRI predicate to be associated with the class
     */
    constructor(classIRI: string, predicateIRI: string);
    generate(writeStream: RDF.Stream & Writable, context: IEnhancementContext): Promise<void>;
}
