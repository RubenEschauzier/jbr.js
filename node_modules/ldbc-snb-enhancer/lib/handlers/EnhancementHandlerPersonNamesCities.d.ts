/// <reference types="node" />
import type { Writable } from 'stream';
import type * as RDF from '@rdfjs/types';
import type { IParameterEmitter } from '../parameters/IParameterEmitter';
import type { IEnhancementContext } from './IEnhancementContext';
import type { IEnhancementHandler } from './IEnhancementHandler';
/**
 * Generate additional names for existing people where the malicious creator refers to a city.
 * Cities will be selected based on the city the random person is located in.
 */
export declare class EnhancementHandlerPersonNamesCities implements IEnhancementHandler {
    private readonly chance;
    private readonly parameterEmitter?;
    /**
     * @param chance The chance for a name to be generated.
     *               The number of new names will be the number of people times this chance,
     *               where names are randomly assigned to names. @range {double}
     * @param parameterEmitter An optional parameter emitter.
     */
    constructor(chance: number, parameterEmitter?: IParameterEmitter);
    generate(writeStream: RDF.Stream & Writable, context: IEnhancementContext): Promise<void>;
}
