{"version":3,"file":"EnhancementHandlerVocabulary.js","sourceRoot":"","sources":["EnhancementHandlerVocabulary.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,uDAA+C;AAC/C,uEAAsD;AAItD,MAAM,EAAE,GAAG,IAAI,8BAAW,EAAE,CAAC;AAE7B;;GAEG;AACH,MAAa,4BAA4B;IAC1B,QAAQ,CAAC,WAAkC,EAAE,OAA4B;;YACpF,MAAM,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,iDAAiD,CAAC,CAAC;YACjF,MAAM,aAAa,GAAG,EAAE,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;YAC1F,MAAM,UAAU,GAAG,EAAE,CAAC,SAAS,CAAC,4CAA4C,CAAC,CAAC;YAE9E,mBAAmB;YACnB,KAAK,MAAM,SAAS,IAAI,OAAO,CAAC,UAAU,EAAE;gBAC1C,MAAM,IAAA,mCAAS,EAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;aAC3E;YACD,gBAAgB;YAChB,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnC,MAAM,IAAA,mCAAS,EAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;aACpE;QACH,CAAC;KAAA;CACF;AAfD,oEAeC","sourcesContent":["import type { Writable } from 'stream';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { writeSafe } from './EnhancementHandlerUtils';\nimport type { IEnhancementContext } from './IEnhancementContext';\nimport type { IEnhancementHandler } from './IEnhancementHandler';\n\nconst DF = new DataFactory();\n\n/**\n * Generates vocabulary information.\n */\nexport class EnhancementHandlerVocabulary implements IEnhancementHandler {\n  public async generate(writeStream: RDF.Stream & Writable, context: IEnhancementContext): Promise<void> {\n    const rdf_type = DF.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const rdfs_property = DF.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#Property');\n    const rdfs_class = DF.namedNode('http://www.w3.org/2000/01/rdf-schema#Class');\n\n    // Write predicates\n    for (const predicate of context.predicates) {\n      await writeSafe(writeStream, DF.quad(predicate, rdf_type, rdfs_property));\n    }\n    // Write classes\n    for (const clazz of context.classes) {\n      await writeSafe(writeStream, DF.quad(clazz, rdf_type, rdfs_class));\n    }\n  }\n}\n"]}