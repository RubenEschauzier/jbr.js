var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "find-up", "fs", "path"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findReadme = void 0;
    const find_up_1 = __importDefault(require("find-up"));
    const fs_1 = __importDefault(require("fs"));
    const path_1 = __importDefault(require("path"));
    function findReadme(reflection) {
        var _a, _b;
        const filename = (_b = (_a = reflection.sources) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.fileName;
        if (!filename) {
            return undefined;
        }
        const readmeFilename = find_up_1.default.sync("README.md", {
            cwd: path_1.default.dirname(filename),
        });
        if (!readmeFilename) {
            return undefined;
        }
        try {
            return fs_1.default.readFileSync(readmeFilename).toString();
        }
        catch (_c) {
            return undefined;
        }
    }
    exports.findReadme = findReadme;
});
