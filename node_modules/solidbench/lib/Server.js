"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Server = void 0;
const path_1 = __importDefault(require("path"));
const community_server_1 = require("@solid/community-server");
/**
 * Serves generated fragments over HTTP.
 */
class Server {
    constructor(options) {
        this.configPath = options.configPath;
        this.port = options.port;
        this.baseUrl = options.baseUrl;
        this.rootFilePath = options.rootFilePath;
        this.logLevel = options.logLevel;
    }
    serve() {
        return __awaiter(this, void 0, void 0, function* () {
            return new community_server_1.AppRunner().run({
                mainModulePath: path_1.default.join(__dirname, '..'),
                logLevel: this.logLevel,
                typeChecking: false,
            }, this.configPath, {
                'urn:solid-server:default:variable:port': this.port,
                'urn:solid-server:default:variable:rootFilePath': this.rootFilePath,
                'urn:solid-server:default:variable:loggingLevel': this.logLevel,
                'urn:solid-server:default:variable:baseUrl': this.baseUrl || `http://localhost:${this.port}/`,
                'urn:solid-server:default:variable:seededPodConfigJson': '',
                'urn:solid-server:default:variable:showStackTrace': false,
            });
        });
    }
}
exports.Server = Server;
//# sourceMappingURL=Server.js.map