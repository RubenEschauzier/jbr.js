{"version":3,"file":"Server.js","sourceRoot":"","sources":["Server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,8DAAoD;AAEpD;;GAEG;AACH,MAAa,MAAM;IAOjB,YAAmB,OAAuB;QACxC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACnC,CAAC;IAEY,KAAK;;YAChB,OAAO,IAAI,4BAAS,EAAE,CAAC,GAAG,CACxB;gBACE,cAAc,EAAE,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC;gBAC1C,QAAQ,EAAQ,IAAI,CAAC,QAAQ;gBAC7B,YAAY,EAAE,KAAK;aACpB,EACD,IAAI,CAAC,UAAU,EACf;gBACE,wCAAwC,EAAE,IAAI,CAAC,IAAI;gBACnD,gDAAgD,EAAE,IAAI,CAAC,YAAY;gBACnE,gDAAgD,EAAE,IAAI,CAAC,QAAQ;gBAC/D,2CAA2C,EAAE,IAAI,CAAC,OAAO,IAAI,oBAAoB,IAAI,CAAC,IAAI,GAAG;gBAC7F,uDAAuD,EAAE,EAAE;gBAC3D,kDAAkD,EAAE,KAAK;aAC1D,CACF,CAAC;QACJ,CAAC;KAAA;CACF;AAjCD,wBAiCC","sourcesContent":["import Path from 'path';\nimport { AppRunner } from '@solid/community-server';\n\n/**\n * Serves generated fragments over HTTP.\n */\nexport class Server {\n  private readonly configPath: string;\n  private readonly port: number;\n  private readonly baseUrl: string | undefined;\n  private readonly rootFilePath: string;\n  private readonly logLevel: string;\n\n  public constructor(options: IServerOptions) {\n    this.configPath = options.configPath;\n    this.port = options.port;\n    this.baseUrl = options.baseUrl;\n    this.rootFilePath = options.rootFilePath;\n    this.logLevel = options.logLevel;\n  }\n\n  public async serve(): Promise<void> {\n    return new AppRunner().run(\n      {\n        mainModulePath: Path.join(__dirname, '..'),\n        logLevel: <any> this.logLevel,\n        typeChecking: false,\n      },\n      this.configPath,\n      {\n        'urn:solid-server:default:variable:port': this.port,\n        'urn:solid-server:default:variable:rootFilePath': this.rootFilePath,\n        'urn:solid-server:default:variable:loggingLevel': this.logLevel,\n        'urn:solid-server:default:variable:baseUrl': this.baseUrl || `http://localhost:${this.port}/`,\n        'urn:solid-server:default:variable:seededPodConfigJson': '',\n        'urn:solid-server:default:variable:showStackTrace': false,\n      },\n    );\n  }\n}\n\nexport interface IServerOptions {\n  configPath: string;\n  port: number;\n  baseUrl: string | undefined;\n  rootFilePath: string;\n  logLevel: string;\n}\n"]}