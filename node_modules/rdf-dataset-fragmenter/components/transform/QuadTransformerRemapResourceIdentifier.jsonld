{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/rdf-dataset-fragmenter/^2.0.0/components/context.jsonld"
  ],
  "@id": "npmd:rdf-dataset-fragmenter",
  "components": [
    {
      "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier",
      "@type": "Class",
      "requireElement": "QuadTransformerRemapResourceIdentifier",
      "extends": [
        "rdfdf:components/transform/IQuadTransformer.jsonld#IQuadTransformer"
      ],
      "comment": "A quad transformer that matches all resources of the given type, and rewrites its (subject) IRI (across all triples) so that it becomes part of the targeted resource.  For example, a transformer matching on type `Post` for identifier predicate `hasId` and target predicate `hasCreator` will modify all post IRIs to become a hash-based IRI inside the object IRI of `hasCreator`. Concretely, `<ex:post1> a <Post>. <ex:post1> <hasId> '1'. <ex:post1> <hasCreator> <urn:person1>` will become `<urn:person1#Post1> a <Post>. <urn:person1#Post1> <hasId> '1'. <urn:person1#post1> <hasCreator> <urn:person1>`.  WARNING: This transformer assumes that all the applicable resources have `rdf:type` occurring as first triple with the resource IRI as subject.",
      "parameters": [
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_newIdentifierSeparator",
          "range": "xsd:string",
          "comment": "Separator string to use inbetween the target IRI and the identifier value when minting a new resource IRI. This may also be a relative IRI."
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_typeRegex",
          "range": "xsd:string",
          "comment": "The RDF type that should be used to capture resources."
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_identifierPredicateRegex",
          "range": "xsd:string",
          "comment": "Predicate regex that contains a resource identifier."
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_targetPredicateRegex",
          "range": "xsd:string",
          "comment": "Predicate regex that contains an IRI onto which the resource identifier should be remapped."
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_keepSubjectFragment",
          "range": {
            "@type": "ParameterRangeUnion",
            "parameterRangeElements": [
              "xsd:boolean",
              {
                "@type": "ParameterRangeUndefined"
              }
            ]
          },
          "comment": "If the fragment of the original subject should be inherited onto the new identifier IRI."
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_identifierValueModifier",
          "range": {
            "@type": "ParameterRangeUnion",
            "parameterRangeElements": [
              "rdfdf:components/transform/value/IValueModifier.jsonld#IValueModifier",
              {
                "@type": "ParameterRangeUndefined"
              }
            ]
          },
          "comment": "An optional value modifier that will be applied on matched identifier values."
        }
      ],
      "memberFields": [
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_newIdentifierSeparator",
          "memberFieldName": "newIdentifierSeparator"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_identifierPredicate",
          "memberFieldName": "identifierPredicate"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_identifierValueModifier",
          "memberFieldName": "identifierValueModifier"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_keepSubjectFragment",
          "memberFieldName": "keepSubjectFragment"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_resourceIdentifier",
          "memberFieldName": "resourceIdentifier",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "rdfdf:components/transform/identifier/ResourceIdentifier.jsonld#ResourceIdentifier",
            "genericTypeInstances": [
              "urn:npm:@rdfjs/types:NamedNode"
            ]
          }
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_transform",
          "memberFieldName": "transform"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_mapQuad",
          "memberFieldName": "mapQuad"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier__member_end",
          "memberFieldName": "end"
        }
      ],
      "constructorArguments": [
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_newIdentifierSeparator"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_typeRegex"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_identifierPredicateRegex"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_targetPredicateRegex"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_identifierValueModifier"
        },
        {
          "@id": "rdfdf:components/transform/QuadTransformerRemapResourceIdentifier.jsonld#QuadTransformerRemapResourceIdentifier_keepSubjectFragment"
        }
      ]
    }
  ]
}