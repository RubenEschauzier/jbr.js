{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/rdf-dataset-fragmenter/^2.0.0/components/context.jsonld"
  ],
  "@id": "npmd:rdf-dataset-fragmenter",
  "components": [
    {
      "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException",
      "@type": "Class",
      "requireElement": "FragmentationStrategyException",
      "extends": [
        "rdfdf:components/strategy/FragmentationStrategyStreamAdapter.jsonld#FragmentationStrategyStreamAdapter"
      ],
      "comment": "A fragmentation strategy that delegates all but the listed exceptions to a given strategy. The exceptions are handled via matchers, that can delegate to another strategy.",
      "parameters": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException_strategy",
          "range": "rdfdf:components/strategy/IFragmentationStrategy.jsonld#IFragmentationStrategy"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException_exceptions",
          "range": {
            "@type": "ParameterRangeArray",
            "parameterRangeValue": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry"
          }
        }
      ],
      "memberFields": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_strategy",
          "memberFieldName": "strategy"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_exceptions",
          "memberFieldName": "exceptions"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_state",
          "memberFieldName": "state"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_fragment",
          "memberFieldName": "fragment"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException__member_handleQuad",
          "memberFieldName": "handleQuad"
        }
      ],
      "constructorArguments": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException_strategy"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyException_exceptions"
        }
      ]
    },
    {
      "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry",
      "@type": "Class",
      "requireElement": "FragmentationStrategyExceptionEntry",
      "parameters": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry_matcher",
          "range": "rdfdf:components/quadmatcher/IQuadMatcher.jsonld#IQuadMatcher"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry_strategy",
          "range": "rdfdf:components/strategy/IFragmentationStrategy.jsonld#IFragmentationStrategy"
        }
      ],
      "memberFields": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry__member_matcher",
          "memberFieldName": "matcher",
          "range": "rdfdf:components/quadmatcher/IQuadMatcher.jsonld#IQuadMatcher"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry__member_strategy",
          "memberFieldName": "strategy",
          "range": "rdfdf:components/strategy/IFragmentationStrategy.jsonld#IFragmentationStrategy"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry__member_constructor",
          "memberFieldName": "constructor"
        }
      ],
      "constructorArguments": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry_matcher"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#FragmentationStrategyExceptionEntry_strategy"
        }
      ]
    },
    {
      "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#IStreamState",
      "@type": "AbstractClass",
      "requireElement": "IStreamState",
      "parameters": [],
      "memberFields": [
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#IStreamState__member_strategyStream",
          "memberFieldName": "strategyStream"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#IStreamState__member_strategyPromise",
          "memberFieldName": "strategyPromise"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#IStreamState__member_exceptionStreams",
          "memberFieldName": "exceptionStreams"
        },
        {
          "@id": "rdfdf:components/strategy/FragmentationStrategyException.jsonld#IStreamState__member_exceptionPromises",
          "memberFieldName": "exceptionPromises"
        }
      ],
      "constructorArguments": []
    }
  ]
}