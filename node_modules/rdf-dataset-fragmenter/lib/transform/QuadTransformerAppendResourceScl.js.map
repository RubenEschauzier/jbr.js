{"version":3,"file":"QuadTransformerAppendResourceScl.js","sourceRoot":"","sources":["QuadTransformerAppendResourceScl.ts"],"names":[],"mappings":";;;AACA,uDAA+C;AAE/C,iGAA8F;AAE9F,MAAM,EAAE,GAAG,IAAI,8BAAW,EAAE,CAAC;AAE7B;;GAEG;AACH,MAAa,gCAAiC,SAAQ,2EAAoC;IASxF,YACE,SAAiB,EACjB,gBAAwB,EACxB,SAAiB;QAEjB,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAES,WAAW,CAAC,QAAkB,EAAE,OAAmB;QAC3D,MAAM,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9E,OAAO,CAAC,IAAI,CACV,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,gCAAgC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,OAAO,CAAC,EACxF,EAAE,CAAC,IAAI,CAAC,QAAQ,EACd,gCAAgC,CAAC,aAAa,EAC9C,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,gCAAgC,CAAC,YAAY,CAAC,CAAC,CAC7E,CAAC;IACJ,CAAC;;AA3BH,4EA4BC;AA3BwB,2CAAU,GAAG,6BAA6B,CAAC;AAC3C,mDAAkB,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,gCAAgC,CAAC,UAAU,WAAW,CAAC,CAAC;AAC7F,8CAAa,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,gCAAgC,CAAC,UAAU,OAAO,CAAC,CAAC;AACpF,6CAAY,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,gCAAgC,CAAC,UAAU,KAAK,CAAC,CAAC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\n\nimport { QuadTransformerAppendResourceAdapter } from './QuadTransformerAppendResourceAdapter';\n\nconst DF = new DataFactory();\n\n/**\n * A quad transformer that appends SCL policies to resources of the given type.\n */\nexport class QuadTransformerAppendResourceScl extends QuadTransformerAppendResourceAdapter {\n  public static readonly PREFIX_SCL = 'https://w3id.org/scl/vocab#';\n  public static readonly IRI_SCL_APPLIES_TO = DF.namedNode(`${QuadTransformerAppendResourceScl.PREFIX_SCL}appliesTo`);\n  public static readonly IRI_SCL_SCOPE = DF.namedNode(`${QuadTransformerAppendResourceScl.PREFIX_SCL}scope`);\n  public static readonly IRI_SCL_TYPE = DF.namedNode(`${QuadTransformerAppendResourceScl.PREFIX_SCL}SCL`);\n\n  private readonly identifierSuffix: string;\n  private readonly sclPolicy: string;\n\n  public constructor(\n    typeRegex: string,\n    identifierSuffix: string,\n    sclPolicy: string,\n  ) {\n    super(typeRegex);\n    this.identifierSuffix = identifierSuffix;\n    this.sclPolicy = sclPolicy;\n  }\n\n  protected appendQuads(original: RDF.Quad, results: RDF.Quad[]): void {\n    const policyId = DF.namedNode(original.subject.value + this.identifierSuffix);\n    results.push(\n      DF.quad(policyId, QuadTransformerAppendResourceScl.IRI_SCL_APPLIES_TO, original.subject),\n      DF.quad(policyId,\n        QuadTransformerAppendResourceScl.IRI_SCL_SCOPE,\n        DF.literal(this.sclPolicy, QuadTransformerAppendResourceScl.IRI_SCL_TYPE)),\n    );\n  }\n}\n"]}