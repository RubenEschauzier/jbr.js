/// <reference types="node" />
import type { Readable } from 'stream';
import type * as RDF from '@rdfjs/types';
import type { IQuadSink } from '../io/IQuadSink';
import type { IFragmentationStrategy } from './IFragmentationStrategy';
/**
 * A fragmentation strategy that combines multiple strategies.
 * This means that all the given strategies will be executed in parallel.
 */
export declare class FragmentationStrategyComposite implements IFragmentationStrategy {
    private readonly strategies;
    constructor(strategies: IFragmentationStrategy[]);
    fragment(quadStream: RDF.Stream & Readable, quadSink: IQuadSink): Promise<void>;
}
