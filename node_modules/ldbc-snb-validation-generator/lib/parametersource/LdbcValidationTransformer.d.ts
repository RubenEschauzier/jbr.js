/// <reference types="node" />
/// <reference types="node" />
import type { TransformCallback } from 'stream';
import { Transform } from 'stream';
import { QueryParameters } from '../QueryParameters';
declare type BufferEncoding = 'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex';
/**
 * Transforms a text stream into a stream of {@link QueryParameters}.
 */
export declare class LdbcValidationTransformer extends Transform {
    private lineBuffer;
    constructor();
    _transform(chunkBuffer: Buffer, encoding: BufferEncoding, callback: TransformCallback): void;
    _flush(callback: TransformCallback): void;
    flushLine(): void;
    parseJsonContext(data: string, line: string, part: string): any;
    parseLine(line: string): QueryParameters;
}
export {};
