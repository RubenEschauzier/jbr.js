"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoidQueryHandler = void 0;
/**
 * A query handler that does nothing for a given query identifier.
 */
class VoidQueryHandler {
    /**
     * @param identifier Identifier for validation queries this handler should apply to.
     */
    constructor(identifier) {
        this.identifier = identifier;
    }
    handle(queryParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (queryParameters.queryIdentifier === this.identifier) {
                return {
                    valid: false,
                    query: '',
                    results: '',
                };
            }
            return undefined;
        });
    }
}
exports.VoidQueryHandler = VoidQueryHandler;
//# sourceMappingURL=VoidQueryHandler.js.map