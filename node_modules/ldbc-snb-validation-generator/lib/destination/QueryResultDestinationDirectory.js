"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryResultDestinationDirectory = void 0;
const Path = require("path");
const fs_extra_1 = require("fs-extra");
/**
 * A query results destination that writes to text files in a directory.
 */
class QueryResultDestinationDirectory {
    /**
     * @param path Path to a directory.
     */
    constructor(path) {
        this.path = path;
    }
    write(queryId, query, results) {
        return __awaiter(this, void 0, void 0, function* () {
            yield (0, fs_extra_1.ensureDir)(this.path);
            yield (0, fs_extra_1.writeFile)(Path.join(this.path, `${queryId}.sparql`), query);
            yield (0, fs_extra_1.writeFile)(Path.join(this.path, `${queryId}.results`), results);
        });
    }
}
exports.QueryResultDestinationDirectory = QueryResultDestinationDirectory;
//# sourceMappingURL=QueryResultDestinationDirectory.js.map