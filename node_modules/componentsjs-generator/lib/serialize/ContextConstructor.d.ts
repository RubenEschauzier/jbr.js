import type { PackageMetadata } from '../parse/PackageMetadataLoader';
import type { ComponentDefinitions, ParameterDefinitionRange } from './ComponentDefinitions';
/**
 * Constructs a JSON-LD context for a given package..
 */
export declare class ContextConstructor {
    private readonly packageMetadata;
    constructor(args: ContextConstructorArgs);
    /**
     * Determine a JSON-LD prefix for the given package name.
     * It will take the first letters of the name's components.
     * @param packageName A package name.
     */
    static getPackageNamePrefix(packageName: string): string;
    /**
     * Construct a JSON-LD context.
     * @param components Optional component definitions to provide shortcuts for.
     */
    constructContext(components?: ComponentDefinitions): ContextRaw;
    /**
     * Construct a hash of component shortcuts.
     * @param componentDefinitions Component definitions.
     */
    constructComponentShortcuts(componentDefinitions: ComponentDefinitions): Record<string, string>;
    static isParameterRangeList(range: ParameterDefinitionRange | undefined): boolean;
    static isParameterRangeUndefined(range: ParameterDefinitionRange): boolean;
}
export interface ContextConstructorArgs {
    packageMetadata: PackageMetadata;
}
export interface ContextRaw {
    '@context': (string | Record<string, string>)[];
}
