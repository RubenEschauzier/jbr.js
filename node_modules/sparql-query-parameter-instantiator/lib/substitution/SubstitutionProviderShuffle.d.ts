import type { RawTerm } from '../variable/IVariableTemplate';
import type { ISubstitutionProvider } from './ISubstitutionProvider';
/**
 * A substitution provider that wraps over another substitution provider and shuffles all values based on a seed.
 */
export declare class SubstitutionProviderShuffle implements ISubstitutionProvider {
    private readonly substitutionProvider;
    private seed;
    /**
     * @param substitutionProvider The substitution provider to shuffle.
     * @param seed The random seed for shuffling.
     */
    constructor(substitutionProvider: ISubstitutionProvider, seed: number);
    getValues(): Promise<RawTerm[]>;
    protected nextRandom(): number;
    protected shuffle(array: RawTerm[]): RawTerm[];
}
