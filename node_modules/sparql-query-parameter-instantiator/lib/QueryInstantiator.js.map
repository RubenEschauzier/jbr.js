{"version":3,"file":"QueryInstantiator.js","sourceRoot":"","sources":["QueryInstantiator.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;GAEG;AACH,MAAa,iBAAiB;IAI5B,YAAmB,SAAkC,EAAE,KAAa;QAClE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEe,mBAAmB,CAAC,QAA+B;;YACjE,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,cAAc,EAAE,CAAC;YAEjD,uBAAuB;YACvB,MAAM,OAAO,GAAG,EAAE,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACnC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;YACD,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEzC,MAAM,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAC9C,CAAC;KAAA;IAED;;OAEG;IACU,WAAW;;YACtB,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;KAAA;CACF;AA5BD,8CA4BC","sourcesContent":["import type { QueryTemplateProvider } from './QueryTemplateProvider';\n\n/**\n * Instantiates query providers a number of times.\n */\nexport class QueryInstantiator {\n  private readonly providers: QueryTemplateProvider[];\n  private readonly count: number;\n\n  public constructor(providers: QueryTemplateProvider[], count: number) {\n    this.providers = providers;\n    this.count = count;\n  }\n\n  protected async instantiateProvider(provider: QueryTemplateProvider): Promise<void> {\n    const template = await provider.createTemplate();\n\n    // Create queries files\n    const queries = [];\n    for (let i = 0; i < this.count; i++) {\n      queries.push(template.instantiate(i));\n    }\n    const queriesFile = queries.join('\\n\\n');\n\n    await provider.saveQueriesFile(queriesFile);\n  }\n\n  /**\n   * Invoke all query providers.\n   */\n  public async instantiate(): Promise<void> {\n    await Promise.all(this.providers.map(provider => this.instantiateProvider(provider)));\n  }\n}\n"]}