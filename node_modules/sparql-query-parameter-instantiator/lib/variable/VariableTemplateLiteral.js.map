{"version":3,"file":"VariableTemplateLiteral.js","sourceRoot":"","sources":["VariableTemplateLiteral.ts"],"names":[],"mappings":";;;AAIA,uEAAoE;AAEpE;;GAEG;AACH,MAAa,uBAAwB,SAAQ,iDAAuB;IAIlE,YACE,IAAY,EACZ,oBAA4C,EAC5C,iBAAuC,EACvC,QAAiB,EACjB,QAAiB;QAEjB,KAAK,CAAC,IAAI,EAAE,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACrE,CAAC;IAEM,eAAe,CAAC,KAAc;QACnC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,wEAAwE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SACtG;QACD,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;CACF;AAtBD,0DAsBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type { ISubstitutionProvider } from '../substitution/ISubstitutionProvider';\nimport type { IValueTransformer } from '../valuetransformer/IValueTransformer';\nimport type { RawTerm } from './IVariableTemplate';\nimport { VariableTemplateAdapter } from './VariableTemplateAdapter';\n\n/**\n * A template for instantiating RDF Literals from a variable value.\n */\nexport class VariableTemplateLiteral extends VariableTemplateAdapter {\n  private readonly language?: string;\n  private readonly datatype?: RDF.NamedNode;\n\n  public constructor(\n    name: string,\n    substitutionProvider?: ISubstitutionProvider,\n    valueTransformers?: IValueTransformer[],\n    language?: string,\n    datatype?: string,\n  ) {\n    super(name, substitutionProvider, valueTransformers);\n    this.language = language;\n    this.datatype = datatype ? this.DF.namedNode(datatype) : undefined;\n  }\n\n  public createTermInner(value: RawTerm): RDF.Term {\n    if (Array.isArray(value)) {\n      throw new Error(`Received unsupported array value for the VariableTemplateLiteral for ${this.name}`);\n    }\n    return this.DF.literal(`${value}`, this.language || this.datatype);\n  }\n}\n"]}