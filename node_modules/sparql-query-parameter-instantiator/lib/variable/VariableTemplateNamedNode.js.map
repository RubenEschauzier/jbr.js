{"version":3,"file":"VariableTemplateNamedNode.js","sourceRoot":"","sources":["VariableTemplateNamedNode.ts"],"names":[],"mappings":";;;AAIA,uEAAoE;AAEpE;;GAEG;AACH,MAAa,yBAA0B,SAAQ,iDAAuB;IACpE,YACE,IAAY,EACZ,oBAA4C,EAC5C,iBAAuC;QAEvC,KAAK,CAAC,IAAI,EAAE,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;IACvD,CAAC;IAEM,eAAe,CAAC,KAAc;QACnC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,0EAA0E,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SACxG;QACD,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;IACvC,CAAC;CACF;AAfD,8DAeC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type { ISubstitutionProvider } from '../substitution/ISubstitutionProvider';\nimport type { IValueTransformer } from '../valuetransformer/IValueTransformer';\nimport type { RawTerm } from './IVariableTemplate';\nimport { VariableTemplateAdapter } from './VariableTemplateAdapter';\n\n/**\n * A template for instantiating RDF Named Nodes from a variable value.\n */\nexport class VariableTemplateNamedNode extends VariableTemplateAdapter {\n  public constructor(\n    name: string,\n    substitutionProvider?: ISubstitutionProvider,\n    valueTransformers?: IValueTransformer[],\n  ) {\n    super(name, substitutionProvider, valueTransformers);\n  }\n\n  public createTermInner(value: RawTerm): RDF.Term {\n    if (Array.isArray(value)) {\n      throw new Error(`Received unsupported array value for the VariableTemplateNamedNode for ${this.name}`);\n    }\n    return this.DF.namedNode(`${value}`);\n  }\n}\n"]}