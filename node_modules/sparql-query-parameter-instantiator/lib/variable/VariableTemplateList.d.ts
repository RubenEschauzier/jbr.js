import type * as RDF from '@rdfjs/types';
import type { ISubstitutionProvider } from '../substitution/ISubstitutionProvider';
import type { IValueTransformer } from '../valuetransformer/IValueTransformer';
import type { IVariableTemplate, RawTerm } from './IVariableTemplate';
import { VariableTemplateAdapter } from './VariableTemplateAdapter';
/**
 * A template for instantiating arrays as RDF Literals concatenated by a given separator.
 * An inner variable template must be passed, which will be invoked for every array value.
 */
export declare class VariableTemplateList extends VariableTemplateAdapter {
    readonly separator: string;
    readonly innerTemplate: IVariableTemplate;
    constructor(name: string, separator: string, innerTemplate: IVariableTemplate, substitutionProvider?: ISubstitutionProvider, valueTransformers?: IValueTransformer[]);
    createTermInner(value: RawTerm): RDF.Term;
}
