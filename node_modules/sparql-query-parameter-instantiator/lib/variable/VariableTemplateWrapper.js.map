{"version":3,"file":"VariableTemplateWrapper.js","sourceRoot":"","sources":["VariableTemplateWrapper.ts"],"names":[],"mappings":";;;AAIA;;GAEG;AACH,MAAa,uBAAuB;IAClC,YACkB,gBAAmC,EACnC,oBAA4C;QAD5C,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,yBAAoB,GAApB,oBAAoB,CAAwB;IAC3D,CAAC;IAEG,UAAU,CAAC,KAAc;QAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IAEM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC;IACtF,CAAC;CACF;AAjBD,0DAiBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type { ISubstitutionProvider } from '../substitution/ISubstitutionProvider';\nimport type { IVariableTemplate, RawTerm } from './IVariableTemplate';\n\n/**\n * A template for wrapper another template and optionally overriding the substitution provider.\n */\nexport class VariableTemplateWrapper implements IVariableTemplate {\n  public constructor(\n    public readonly variableTemplate: IVariableTemplate,\n    public readonly substitutionProvider?: ISubstitutionProvider,\n  ) {}\n\n  public createTerm(value: RawTerm): RDF.Term {\n    return this.variableTemplate.createTerm(value);\n  }\n\n  public getName(): string {\n    return this.variableTemplate.getName();\n  }\n\n  public getSubstitutionProvider(): ISubstitutionProvider | undefined {\n    return this.substitutionProvider || this.variableTemplate.getSubstitutionProvider();\n  }\n}\n"]}