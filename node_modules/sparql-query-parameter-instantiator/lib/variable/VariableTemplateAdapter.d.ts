import type * as RDF from '@rdfjs/types';
import { DataFactory } from 'rdf-data-factory';
import type { ISubstitutionProvider } from '../substitution/ISubstitutionProvider';
import type { IValueTransformer } from '../valuetransformer/IValueTransformer';
import type { IVariableTemplate, RawTerm } from './IVariableTemplate';
/**
 * An adapter for instantiating RDF terms from a variable value.
 */
export declare abstract class VariableTemplateAdapter implements IVariableTemplate {
    protected readonly name: string;
    protected readonly substitutionProvider: ISubstitutionProvider | undefined;
    protected readonly valueTransformers: IValueTransformer[];
    protected readonly DF: DataFactory<RDF.Quad>;
    constructor(name: string, substitutionProvider?: ISubstitutionProvider, valueTransformers?: IValueTransformer[]);
    getName(): string;
    getSubstitutionProvider(): ISubstitutionProvider | undefined;
    createTerm(value: RawTerm): RDF.Term;
    abstract createTermInner(value: RawTerm): RDF.Term;
}
