"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VariableTemplateList = void 0;
const VariableTemplateAdapter_1 = require("./VariableTemplateAdapter");
/**
 * A template for instantiating arrays as RDF Literals concatenated by a given separator.
 * An inner variable template must be passed, which will be invoked for every array value.
 */
class VariableTemplateList extends VariableTemplateAdapter_1.VariableTemplateAdapter {
    constructor(name, separator, innerTemplate, substitutionProvider, valueTransformers) {
        super(name, substitutionProvider, valueTransformers);
        this.separator = separator;
        this.innerTemplate = innerTemplate;
    }
    createTermInner(value) {
        if (!Array.isArray(value)) {
            throw new Error(`Received unsupported non-array value for the VariableTemplateList for ${this.name}`);
        }
        return this.DF.literal(value
            .map(val => this.innerTemplate.createTerm(val).value)
            .join(this.separator));
    }
}
exports.VariableTemplateList = VariableTemplateList;
//# sourceMappingURL=VariableTemplateList.js.map