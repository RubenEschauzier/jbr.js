{"version":3,"file":"HookHandlerSparqlEndpointComunica.js","sourceRoot":"","sources":["HookHandlerSparqlEndpointComunica.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,6CAA+B;AAE/B,6BAAkC;AAClC,6EAA0E;AAE1E;;GAEG;AACH,MAAa,iCAAkC,SAAQ,iBAAuC;IAC5F;QACE,KAAK,CAAC,6BAA6B,EAAE,uDAA0B,CAAC,IAAI,CAAC,CAAC;IACxE,CAAC;IAEM,gBAAgB,CAAC,eAAiC;QACvD,OAAO;YACL,gBAAgB,EAAE,qCAAqC;YACvD,mBAAmB,EAAE;gBACnB,OAAO,EAAE,iCAAiC;gBAC1C,cAAc,EAAE,GAAG;aACpB;YACD,YAAY,EAAE,0BAA0B;YACxC,aAAa,EAAE,2BAA2B;YAC1C,UAAU,EAAE,IAAK;YACjB,cAAc,EAAE,MAAM;YACtB,YAAY,EAAE,GAAG;YACjB,SAAS,EAAE,IAAK;SACjB,CAAC;IACJ,CAAC;IAEM,eAAe;QACpB,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,eAAiC,EAAE,WAAuC;QAC1F,+BAA+B;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE;YACzE,MAAM,EAAE,CAAC,KAAK,CAAC,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;SACjE;QACD,MAAM,EAAE,CAAC,QAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,mBAAmB,CAAC,EACrF,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,aAAa,EAAE,mBAAmB,CAAC,CAAC,CAAC;QAExE,2BAA2B;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1D,MAAM,EAAE,CAAC,KAAK,CAAC,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SAClD;QACD,MAAM,EAAE,CAAC,QAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,oBAAoB,CAAC,EAChF,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC,CAAC;QAC1D,MAAM,EAAE,CAAC,QAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,qBAAqB,CAAC,EACjF,cAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAC7D,CAAC;CACF;AA1CD,8EA0CC","sourcesContent":["import Path from 'path';\nimport * as fs from 'fs-extra';\nimport type { IExperimentPaths } from 'jbr';\nimport { HookHandler } from 'jbr';\nimport { HookSparqlEndpointComunica } from './HookSparqlEndpointComunica';\n\n/**\n * Hook handler for a Comunica-based SPARQL endpoint.\n */\nexport class HookHandlerSparqlEndpointComunica extends HookHandler<HookSparqlEndpointComunica> {\n  public constructor() {\n    super('sparql-endpoint-comunica-rl', HookSparqlEndpointComunica.name);\n  }\n\n  public getDefaultParams(experimentPaths: IExperimentPaths): Record<string, any> {\n    return {\n      dockerfileClient: 'input/dockerfiles/Dockerfile-client',\n      resourceConstraints: {\n        '@type': 'StaticDockerResourceConstraints',\n        cpu_percentage: 100,\n      },\n      configClient: 'input/config-client.json',\n      contextClient: 'input/context-client.json',\n      clientPort: 3_001,\n      clientLogLevel: 'info',\n      queryTimeout: 300,\n      maxMemory: 8_192,\n    };\n  }\n\n  public getSubHookNames(): string[] {\n    return [];\n  }\n\n  public async init(experimentPaths: IExperimentPaths, hookHandler: HookSparqlEndpointComunica): Promise<void> {\n    // Create Dockerfile for client\n    if (!await fs.pathExists(Path.join(experimentPaths.input, 'dockerfiles'))) {\n      await fs.mkdir(Path.join(experimentPaths.input, 'dockerfiles'));\n    }\n    await fs.copyFile(Path.join(__dirname, 'templates', 'dockerfiles', 'Dockerfile-client'),\n      Path.join(experimentPaths.input, 'dockerfiles', 'Dockerfile-client'));\n\n    // Create config for client\n    if (!await fs.pathExists(Path.join(experimentPaths.input))) {\n      await fs.mkdir(Path.join(experimentPaths.input));\n    }\n    await fs.copyFile(Path.join(__dirname, 'templates', 'input', 'config-client.json'),\n      Path.join(experimentPaths.input, 'config-client.json'));\n    await fs.copyFile(Path.join(__dirname, 'templates', 'input', 'context-client.json'),\n      Path.join(experimentPaths.input, 'context-client.json'));\n  }\n}\n"]}