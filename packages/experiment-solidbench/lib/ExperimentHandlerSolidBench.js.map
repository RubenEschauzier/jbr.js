{"version":3,"file":"ExperimentHandlerSolidBench.js","sourceRoot":"","sources":["ExperimentHandlerSolidBench.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from 'path';\nimport * as fs from 'fs-extra';\nimport type { IExperimentPaths } from 'jbr';\nimport { ExperimentHandler } from 'jbr';\nimport { Templates } from 'solidbench';\nimport { ExperimentSolidBench } from './ExperimentSolidBench';\n\n/**\n * An experiment handler for the SolidBench social network benchmark.\n */\nexport class ExperimentHandlerSolidBench extends ExperimentHandler<ExperimentSolidBench> {\n  public constructor() {\n    super('solidbench', ExperimentSolidBench.name);\n  }\n\n  public getDefaultParams(experimentPaths: IExperimentPaths): Record<string, any> {\n    return {\n      scale: '0.1',\n      configGenerateAux: 'input/config-enhancer.json',\n      configFragment: 'input/config-fragmenter.json',\n      configFragmentAux: 'input/config-fragmenter-auxiliary.json',\n      configQueries: 'input/config-queries.json',\n      configServer: 'input/config-server.json',\n      validationParamsUrl: Templates.VALIDATION_PARAMS_URL,\n      configValidation: 'input/config-validation.json',\n      hadoopMemory: '4G',\n      dockerfileServer: 'input/dockerfiles/Dockerfile-server',\n\n      endpointUrl: 'http://localhost:3001/sparql',\n      serverPort: 3_000,\n      serverLogLevel: 'info',\n      serverBaseUrl: 'http://solidbench-server:3000/',\n      serverResourceConstraints: {\n        '@type': 'StaticDockerResourceConstraints',\n        cpu_percentage: 100,\n      },\n      queryRunnerReplication: 3,\n      queryRunnerWarmupRounds: 1,\n      queryRunnerRecordTimestamps: true,\n      queryRunnerRecordHttpRequests: true,\n      queryRunnerUpQuery: `SELECT * WHERE { <http://solidbench-server:3000/pods/00000000000000000933/profile/card#me> a ?o } LIMIT 1`,\n      queryRunnerUrlParamsInit: {},\n      queryRunnerUrlParamsRun: {},\n    };\n  }\n\n  public getHookNames(): string[] {\n    return [ 'hookSparqlEndpoint' ];\n  }\n\n  public async init(experimentPaths: IExperimentPaths, experiment: ExperimentSolidBench): Promise<void> {\n    // Copy config templates\n    await Promise.all([\n      fs.copyFile(Templates.ENHANCEMENT_CONFIG,\n        Path.join(experimentPaths.root, experiment.configGenerateAux)),\n      fs.copyFile(Templates.FRAGMENT_CONFIG,\n        Path.join(experimentPaths.root, experiment.configFragment)),\n      fs.copyFile(Templates.ENHANCEMENT_FRAGMENT_CONFIG,\n        Path.join(experimentPaths.root, experiment.configFragmentAux)),\n      fs.copyFile(Templates.QUERY_CONFIG,\n        Path.join(experimentPaths.root, experiment.configQueries)),\n      fs.copyFile(Templates.SERVER_CONFIG,\n        Path.join(experimentPaths.root, experiment.configServer)),\n      fs.copyFile(Templates.VALIDATION_CONFIG,\n        Path.join(experimentPaths.root, experiment.configValidation)),\n    ]);\n\n    // Create Dockerfile for server\n    await fs.mkdir(Path.join(experimentPaths.input, 'dockerfiles'));\n    await fs.copyFile(Path.join(__dirname, 'templates', 'dockerfiles', 'Dockerfile-server'),\n      Path.join(experimentPaths.input, 'dockerfiles', 'Dockerfile-server'));\n\n    await experiment.replaceBaseUrlInDir(experimentPaths.root);\n  }\n}\n"]}