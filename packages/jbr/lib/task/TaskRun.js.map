{"version":3,"file":"TaskRun.js","sourceRoot":"","sources":["TaskRun.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AAGtD;;GAEG;AACH,MAAa,OAAO;IAIlB,YACE,OAAqB,EACrB,WAA+B;QAE/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,GAAG;QACd,MAAM,mCAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACpF,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAE,GAAG,MAAM,CAAC,MAAM,mCAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;aAC5G,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC1F,KAAK,MAAM,CAAE,CAAC,EAAE,UAAU,CAAE,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;gBAC5D,aAAa;gBACb,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,EAAE,CAAC,CAAC;iBACpE;gBAED,MAAM,UAAU,CAAC,GAAG,iCAAM,IAAI,CAAC,OAAO,KAAE,eAAe,EAAE,oBAAoB,CAAC,CAAC,CAAC,IAAG,CAAC;aACrF;SACF;IACH,CAAC;CACF;AA3BD,0BA2BC","sourcesContent":["import { ExperimentLoader } from './ExperimentLoader';\nimport type { ITaskContext } from './ITaskContext';\n\n/**\n * Runs the run phase of an experiment.\n */\nexport class TaskRun {\n  private readonly context: ITaskContext;\n  private readonly combination: number | undefined;\n\n  public constructor(\n    context: ITaskContext,\n    combination: number | undefined,\n  ) {\n    this.context = context;\n    this.combination = combination;\n  }\n\n  public async run(): Promise<void> {\n    await ExperimentLoader.requireExperimentPrepared(this.context.experimentPaths.root);\n    const { experiments, experimentPathsArray } = await (await ExperimentLoader.build(this.context.mainModulePath))\n      .instantiateExperiments(this.context.experimentName, this.context.experimentPaths.root);\n    for (const [ i, experiment ] of experiments.entries()) {\n      if (this.combination === undefined || this.combination === i) {\n        // Log status\n        if (experiments.length > 1) {\n          this.context.logger.info(`ðŸ§© Running experiment combination ${i}`);\n        }\n\n        await experiment.run({ ...this.context, experimentPaths: experimentPathsArray[i] });\n      }\n    }\n  }\n}\n"]}