{"version":3,"file":"CommandPrepare.js","sourceRoot":"","sources":["CommandPrepare.ts"],"names":[],"mappings":";;;AAGA,wDAAqD;AACrD,8CAAmD;AAEtC,QAAA,OAAO,GAAG,SAAS,CAAC;AACpB,QAAA,IAAI,GAAG,yCAAyC,CAAC;AACvD,MAAM,OAAO,GAAG,CAAC,KAAgB,EAAa,EAAE,CACrD,KAAK;KACF,OAAO,CAAC;IACP,KAAK,EAAE;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,mCAAmC;KAC9C;IACD,WAAW,EAAE;QACX,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,wEAAwE;KACnF;CACF,CAAC,CAAC;AAbM,QAAA,OAAO,WAab;AACA,MAAM,OAAO,GAAG,CAAC,IAAyB,EAAiB,EAAE,CAAC,IAAA,+BAAkB,EAAC,IAAI,EAC1F,KAAK,EAAC,OAAqB,EAAE,EAAE,CAAC,IAAI,yBAAW,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AADvF,QAAA,OAAO,WACgF","sourcesContent":["import type { Argv } from 'yargs';\n\nimport type { ITaskContext } from '../../task/ITaskContext';\nimport { TaskPrepare } from '../../task/TaskPrepare';\nimport { wrapCommandHandler } from '../CliHelpers';\n\nexport const command = 'prepare';\nexport const desc = 'Prepare data for the current experiment';\nexport const builder = (yargs: Argv<any>): Argv<any> =>\n  yargs\n    .options({\n      force: {\n        type: 'boolean',\n        alias: 'f',\n        describe: 'If generated/ must be overwritten',\n      },\n      combination: {\n        type: 'number',\n        alias: 'c',\n        describe: 'The combination id to run. If undefined, all combinations will be run.',\n      },\n    });\nexport const handler = (argv: Record<string, any>): Promise<void> => wrapCommandHandler(argv,\n  async(context: ITaskContext) => new TaskPrepare(context, argv.force, argv.combination).prepare());\n"]}