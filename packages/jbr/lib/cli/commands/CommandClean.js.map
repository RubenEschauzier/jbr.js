{"version":3,"file":"CommandClean.js","sourceRoot":"","sources":["CommandClean.ts"],"names":[],"mappings":";;;AAEA,oDAAiD;AACjD,8CAAmD;AAEtC,QAAA,OAAO,GAAG,OAAO,CAAC;AAClB,QAAA,IAAI,GAAG,yBAAyB,CAAC;AACvC,MAAM,OAAO,GAAG,CAAC,KAAgB,EAAa,EAAE,CACrD,KAAK;KACF,OAAO,CAAC;IACP,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,8BAA8B,EAAE;CACtE,CAAC;KACD,KAAK,CAAC,CAAC,IAAyB,EAAE,EAAE;IACnC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;QACtC,OAAO,IAAI,CAAC;KACb;IACD,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AAVM,QAAA,OAAO,WAUb;AACA,MAAM,OAAO,GAAG,CAAC,IAAyB,EAAiB,EAAE,CAAC,IAAA,+BAAkB,EAAC,IAAI,EAC1F,KAAK,EAAC,OAAqB,EAAE,EAAE,CAAC,IAAI,qBAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAD3D,QAAA,OAAO,WACoD","sourcesContent":["import type { Argv } from 'yargs';\nimport type { ITaskContext } from '../../task/ITaskContext';\nimport { TaskClean } from '../../task/TaskClean';\nimport { wrapCommandHandler } from '../CliHelpers';\n\nexport const command = 'clean';\nexport const desc = 'Cleans up an experiment';\nexport const builder = (yargs: Argv<any>): Argv<any> =>\n  yargs\n    .options({\n      docker: { type: 'boolean', describe: 'Clean up any Docker entities' },\n    })\n    .check((argv: Record<string, any>) => {\n      if (argv._.length === 1 && argv.docker) {\n        return true;\n      }\n      throw new Error('At least one clean option is required');\n    });\nexport const handler = (argv: Record<string, any>): Promise<void> => wrapCommandHandler(argv,\n  async(context: ITaskContext) => new TaskClean(context, argv).clean());\n"]}