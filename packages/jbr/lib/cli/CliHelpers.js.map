{"version":3,"file":"CliHelpers.js","sourceRoot":"","sources":["CliHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from 'path';\nimport * as util from 'util';\nimport Dockerode from 'dockerode';\nimport * as fs from 'fs-extra';\nimport ora from 'ora';\nimport type { Logger } from 'winston';\nimport { createLogger, format, transports } from 'winston';\nimport { CliNpmInstaller } from '../../lib/npm/CliNpmInstaller';\nimport type { NpmInstaller } from '../../lib/npm/NpmInstaller';\nimport { VoidNpmInstaller } from '../../lib/npm/VoidNpmInstaller';\nimport { DockerContainerCreator } from '../docker/DockerContainerCreator';\nimport { DockerImageBuilder } from '../docker/DockerImageBuilder';\nimport { DockerImagePuller } from '../docker/DockerImagePuller';\nimport { DockerNetworkCreator } from '../docker/DockerNetworkCreator';\nimport { ExperimentLoader } from '../task/ExperimentLoader';\nimport type { IExperimentPaths, ITaskContext } from '../task/ITaskContext';\n\nexport function createExperimentPaths(basePath: string, combination?: number): IExperimentPaths {\n  return {\n    root: basePath,\n    input: Path.join(basePath, 'input'),\n    generated: Path.join(basePath, 'generated'),\n    output: Path.join(basePath, 'output'),\n    combination,\n  };\n}\n\nexport function breakpointBarrier(): Promise<void> {\n  return new Promise<void>(resolve => {\n    process.stdout.write('BREAKPOINT: Press any key to continue\\n');\n    process.stdin.setRawMode(true);\n    process.stdin.on('data', () => {\n      process.stdin.setRawMode(false);\n      resolve();\n    });\n  });\n}\n\nexport async function wrapCommandHandler(\n  argv: Record<string, any>,\n  handler: (context: ITaskContext) => Promise<void>,\n): Promise<void> {\n  const startTime = process.hrtime();\n\n  // Create context\n  const dockerode = new Dockerode(argv.dockerOptions ?\n    // eslint-disable-next-line no-sync\n    JSON.parse(await fs.readFile(argv.dockerOptions, 'utf8')) :\n    undefined);\n  const context: ITaskContext = {\n    cwd: argv.cwd,\n    experimentPaths: createExperimentPaths(argv.cwd),\n    experimentName: await ExperimentLoader.getExperimentName(argv.cwd),\n    mainModulePath: argv.mainModulePath || argv.cwd,\n    verbose: argv.verbose,\n    logger: createCliLogger(argv.verbose ? 'verbose' : 'info'),\n    docker: {\n      containerCreator: new DockerContainerCreator(dockerode),\n      imageBuilder: new DockerImageBuilder(dockerode),\n      imagePuller: new DockerImagePuller(dockerode),\n      networkCreator: new DockerNetworkCreator(dockerode),\n    },\n    // eslint-disable-next-line unicorn/no-process-exit\n    closeExperiment: () => process.emit(<any>'SIGTERM'),\n    cleanupHandlers: [],\n    ...argv.breakpoints ? { breakpointBarrier } : {},\n  };\n\n  // Register cleanup handling\n  let performingGlobalCleanup = false;\n  const globalCleanupHandler = async(uncaughtException: any): Promise<void> => {\n    // Print error if uncaught exception\n    if (uncaughtException instanceof Error) {\n      // eslint-disable-next-line no-console\n      console.error('Uncaught Exception:');\n      // eslint-disable-next-line no-console\n      console.error(uncaughtException);\n    }\n\n    performingGlobalCleanup = true;\n    try {\n      for (const cleanupHandler of context.cleanupHandlers) {\n        await cleanupHandler();\n      }\n    } catch (error: unknown) {\n      context.logger.error(`${util.format(error)}`);\n    }\n    // eslint-disable-next-line unicorn/no-process-exit\n    process.exit(1);\n  };\n  process.on('SIGINT', globalCleanupHandler);\n  process.on('SIGTERM', globalCleanupHandler);\n  process.on('uncaughtException', globalCleanupHandler);\n\n  // Run handler\n  let completed = false;\n  try {\n    await handler(context);\n    completed = true;\n  } catch (error: unknown) {\n    if (!performingGlobalCleanup) {\n      if ('handled' in (<Error>error)) {\n        context.logger.error(`${(<Error>error).message}`);\n      } else {\n        context.logger.error(`${util.format(error)}`);\n      }\n    }\n  } finally {\n    if (!performingGlobalCleanup) {\n      const endTime = process.hrtime(startTime);\n      const seconds = (endTime[0] + endTime[1] / 1_000_000_000).toFixed(2);\n      if (completed) {\n        context.logger.info(`âœ¨ Done in ${seconds}s`);\n      } else {\n        context.logger.info(`ðŸš¨ Errored in ${seconds}s`);\n        // eslint-disable-next-line unicorn/no-process-exit\n        process.exit(1);\n      }\n    }\n  }\n}\n\nexport async function wrapVisualProgress<T>(label: string, handler: () => Promise<T>): Promise<T> {\n  const spinner = ora(label).start();\n  try {\n    return await handler();\n  } finally {\n    spinner.stop();\n  }\n}\n\nexport function createCliLogger(logLevel: string): Logger {\n  return createLogger({\n    level: logLevel,\n    format: format.combine(\n      format.colorize({ all: true, colors: { info: 'white' }}),\n      format.timestamp(),\n      format.printf(({ message }: Record<string, any>): string => `${message}`),\n    ),\n    transports: [ new transports.Console({\n      stderrLevels: [ 'error', 'warn', 'info', 'verbose', 'debug', 'silly' ],\n    }) ],\n  });\n}\n\nexport async function createNpmInstaller(context: ITaskContext, nextVersion: boolean): Promise<NpmInstaller> {\n  return await fs.pathExists(`${__dirname}/../../test`) && Path.join(process.cwd(), Path.sep).startsWith(Path.join(__dirname, '../../../../')) ? new VoidNpmInstaller() : new CliNpmInstaller(context, nextVersion);\n}\n"]}