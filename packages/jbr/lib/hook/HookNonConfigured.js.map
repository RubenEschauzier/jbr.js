{"version":3,"file":"HookNonConfigured.js","sourceRoot":"","sources":["HookNonConfigured.ts"],"names":[],"mappings":";;;AAAA,mEAA2E;AAC3E,sDAAmD;AAMnD;;;;GAIG;AACH,MAAa,iBAAiB;IACrB,KAAK,CAAC,OAAO,CAAC,OAAqB;QACxC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,OAAqB;QACtC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,OAAqB,EAAE,YAA2B;QACnE,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAES,SAAS;QACjB,OAAO,IAAI,2BAAY,CAAC;gCACI,wBAAc,GAAG,CAAC,CAAC;IACjD,CAAC;CACF;AAjBD,8CAiBC","sourcesContent":["import { command as commandSetHook } from '../cli/commands/CommandSetHook';\nimport { ErrorHandled } from '../cli/ErrorHandled';\nimport type { ProcessHandler } from '../experiment/ProcessHandler';\nimport type { ICleanTargets } from '../task/ICleanTargets';\nimport type { ITaskContext } from '../task/ITaskContext';\nimport type { Hook } from './Hook';\n\n/**\n * A hook that always errors upon usage.\n *\n * This hook should be used by default for hooks in new experiments, which have not been configured yet.\n */\nexport class HookNonConfigured implements Hook {\n  public async prepare(context: ITaskContext): Promise<void> {\n    throw this.makeError();\n  }\n\n  public async start(context: ITaskContext): Promise<ProcessHandler> {\n    throw this.makeError();\n  }\n\n  public async clean(context: ITaskContext, cleanTargets: ICleanTargets): Promise<void> {\n    throw this.makeError();\n  }\n\n  protected makeError(): Error {\n    return new ErrorHandled(`Unable to run an experiment with a non-configured hook ('ExperimentHookNonConfigured').\nInitialize this hook via 'jbr ${commandSetHook}'`);\n  }\n}\n"]}